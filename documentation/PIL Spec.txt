Machine Registers:
A                       -    Accumulator
B                       -    Second operand
PC                      -    Program Counter
SP                      -    Stack Pointer
FLAG        NZ------    -    Flag register
    NEG     -   Negative
    ZER     -   Zero

Rough Opcode Mapping: (Offsets are 64 Bit)
0           000             0           00              0
Load/Store  Address Mode    Register    Size            Operation
    0-L/S       0-Immediate     0-A         0-64Bit         0-Load
    1-Other     1-Direct        1-B         1-32Bit         1-Store
                2-SP Offset                 2-16Bit
                3-PC Offset                 3-8Bit
                4-A  Offset
                5-B  Offset
                6-RES
                7-RES

Loads/Stores
0XXXXXXX        -       Follow Addressing as above

Stack Instructions
1000XXXX        -       Follow Addressing as L/S

Change PC instructions:
0x90 0xXXXXXXXXXXXXXXXX     CAL     -   Call function at address
0x91                        RET     -   Return from function
0x92 0xXXXXXXXXXXXXXXXX     JMP     -   Unconditional Jump
0x93 0xXXXXXXXXXXXXXXXX     JEQ     -   Jump if ZER set
0x94 0xXXXXXXXXXXXXXXXX     JGT     -   Jump if NEG unset
0x95                        RES     -   Reserved
0x96                        RES     -   Reserved
0x97                        RES     -   Reserved
0x98                        RES     -   Reserved
0x99                        RES     -   Reserved
0x9A                        RES     -   Reserved
0x9B                        RES     -   Reserved
0x9C                        RES     -   Reserved
0x9D                        RES     -   Reserved
0x9E                        RES     -   Reserved
0x9F                        RES     -   Reserved

ALU Instructions:
0xA0                        ADD     -   Add B to A
0xA1                        SUB     -   Subtract B from A
0xA2                        NEA     -   Negate A
0xA3                        NEB     -   Negate B
0xA4                        AND     -   And A and B in A
0xA5                        OR      -   Or A and B in A
0xA6                        XOR     -   Xor A and B in A
0xA7                        CMP     -   Compare A to B
0xA8                        RES     -   Reserved
0xA9                        RES     -   Reserved
0xAA                        SWP     -   Swap A and B
0xAB                        SPC     -   Swap SP and PC
0xAC                        APC     -   Swap A and PC
0xAD                        ASP     -   Swap A and SP
0xAE                        BPC     -   Swap B and PC
0xAF                        BSP     -   Swap B and SP

Native Functions:
0xB0                        MTP     -   Convert A to P Address
0xB1                        PTM     -   Convert A to M Address
0xB2 0xXXXXXXXXXXXXXXXX     MCA     -   Machine Call (Operand M pointer, B func length, A input, A return)
0xB3                        RES     -   Reserved
0xB4                        RES     -   Reserved
0xB5                        RES     -   Reserved
0xB6                        RES     -   Reserved
0xB7                        RES     -   Reserved
0xB8                        RES     -   Reserved
0xB9                        RES     -   Reserved
0xBA                        RES     -   Reserved
0xBB                        RES     -   Reserved
0xBC                        RES     -   Reserved
0xBD                        RES     -   Reserved
0xBE                        RES     -   Reserved
0xBF                        RES     -   Reserved

0xFE                        NOP     -   Do Nothing
0xFF                        HLT     -   Halt
